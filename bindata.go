// Code generated by go-bindata.
// sources:
// template/app_conf.tpl
// template/condition.tpl
// template/condition_base.tpl
// template/condition_ext.tpl
// template/condition_types.tpl
// template/config.tpl
// template/config_json.tpl
// template/controller.tpl
// template/controller_base.tpl
// template/controller_ext.tpl
// template/dao.tpl
// template/dao_base.tpl
// template/dao_ext.tpl
// template/entity.tpl
// template/entity_ext.tpl
// template/glide.tpl
// template/main.tpl
// template/readme.tpl
// template/router.tpl
// template/service.tpl
// template/service_base.tpl
// template/service_ext.tpl
// template/util_convert_interface.tpl
// template/util_json_time.tpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateApp_confTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\xc2\x30\x0c\x05\xd0\xdd\xa7\xf0\x09\x50\xd7\x0e\xd9\x60\x45\x5c\xc1\x6d\x3e\x30\x34\xb1\x71\x1c\xa4\xaa\xca\xdd\x11\x52\xd7\xa7\x27\x66\x55\x0a\x38\xf1\x71\x5c\x1e\xae\x2f\x97\x72\x97\x82\x31\xe8\x1d\x61\xa6\x1e\x9c\x78\x9e\xe6\x89\xbc\xd7\xa2\xf9\x5f\x33\xbe\x24\x3d\xd4\x51\x33\x9c\x13\x3f\x65\x6b\xa0\x55\x6d\x77\x7c\x3a\x5a\x2c\x9a\x77\x4e\x1c\xde\x41\xb7\x2a\xcb\x86\xab\xae\xed\x94\x5f\x00\x00\x00\xff\xff\x43\xdb\xf0\x85\x74\x00\x00\x00")

func templateApp_confTplBytes() ([]byte, error) {
	return bindataRead(
		_templateApp_confTpl,
		"template/app_conf.tpl",
	)
}

func templateApp_confTpl() (*asset, error) {
	bytes, err := templateApp_confTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/app_conf.tpl", size: 116, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateConditionTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4f\x6b\x13\x41\x18\xc6\xcf\x9d\x4f\xf1\xba\xa7\x44\x64\xf7\x22\x1e\x0a\xb9\x18\x3c\xe8\x41\x72\x08\x78\xed\x34\x99\x84\xc1\xdd\x99\x75\x66\x22\x0d\xc3\x7b\xe8\x25\x55\xdb\x10\x41\x09\x34\x05\xff\x42\x29\x52\x4a\x0f\x1e\xaa\xa6\xf4\xcb\x6c\x36\xeb\xa9\x5f\x41\x66\x37\x45\x13\x59\x15\xe9\x31\xcf\xe4\x7d\x7e\xcf\xfb\xec\x1b\x04\x30\x3f\xda\x9d\x7d\x1d\x65\x3b\x9f\x66\x2f\x8e\xe6\xaf\xdf\xa6\xcf\x5e\xde\x82\xe4\x6c\x37\x3d\x7e\x9f\x1e\x7c\x4e\xc7\xa7\xc9\x74\x92\x1d\x0e\xe6\x07\xe3\xcb\xe9\x9e\xfb\xd7\xc9\x24\xf9\xf2\x3c\xf9\xf6\x71\xfe\x6e\x3b\x39\x1b\x66\x87\xdb\xb3\xc1\x30\xbb\xd8\xff\xbe\xb3\x37\x9f\x8e\x67\x83\x7d\x12\x04\xb0\xd9\x87\xae\xf4\x15\xe5\xa1\x26\x31\x6d\x3d\xa6\x5d\x06\xd6\xfa\x75\x29\xda\xdc\x70\x29\x1a\x85\x86\x48\x08\x8f\x62\xa9\x0c\x54\x08\x00\x80\x0f\x9e\xb5\x7e\x43\xc9\xae\xa2\xd1\x43\x1a\x31\xc4\xa0\x2d\xbd\xfc\xed\xf7\x97\x9e\xe1\xa1\x47\xaa\xc4\x11\xd3\xd1\x28\xbb\x38\xbd\x9c\x4e\xac\x05\xbf\x49\x37\x43\x56\x97\x51\xc4\x84\x01\x44\x62\xfa\xb1\xe3\x83\x5f\x0f\xa9\xd6\x6e\x1a\x10\x5d\x18\xd0\x46\xf5\x5a\x06\x6c\x4e\xb8\x4b\x35\x73\x6a\xfe\xc3\x5a\x45\x45\x97\x81\x5f\x97\x61\x2f\x12\x1a\xd1\x5a\xff\x9e\x30\xdc\xf4\x1b\x4a\xc6\x4c\x99\x7e\x11\x23\x37\x5e\x7e\x78\x44\xe3\x98\xa9\xa6\xa3\x22\xc2\x46\x47\xaa\x68\xdd\xc5\x2f\x06\x3c\x68\x33\xdd\x52\x3c\x76\x4d\xe4\xfa\x22\x2a\xa2\xb7\x01\x41\x50\x24\xfd\x99\xbe\x48\xc3\x44\x1b\x91\xe0\xf2\xb2\xb3\x93\x37\xc9\xf9\xab\xec\xfc\x38\x1d\x7e\x20\x9d\x9e\x68\x41\x65\x0b\x6e\x3a\xc7\xab\x45\x8b\x3d\xab\xd0\x94\xcb\x6a\xa5\x0a\xcb\x02\x58\xb2\xc6\x60\xbd\xb6\x22\x5b\x2c\x69\x23\x97\x79\x07\xb6\xfc\xb2\x5e\x6e\xd4\x40\xf0\x70\xd1\x6d\x61\xc2\x3b\xc0\x9e\xac\xb6\x95\xf7\xe4\x71\x61\x3c\x40\x64\xa5\x76\x35\x70\xdf\xdb\xdd\xd0\x53\xa6\xcc\x7d\x61\x2a\xa5\xe8\xea\x2f\x48\x16\x6a\x06\x7f\xe0\xe6\xa6\x0f\xb4\x14\x4d\x1e\x31\xef\xdf\x03\x5c\x8d\x5c\x4f\x8a\x4e\x28\xa9\xb9\x73\xfb\x2f\xfc\x52\x94\x5f\x59\x18\xac\x32\xff\xdb\x4f\x1b\xc5\x45\xb7\x4a\x16\x87\xb7\x7c\x85\x6b\x8a\x99\x9e\x12\xc0\x08\xfe\x08\x00\x00\xff\xff\xce\x60\x4c\xaf\x41\x04\x00\x00")

func templateConditionTplBytes() ([]byte, error) {
	return bindataRead(
		_templateConditionTpl,
		"template/condition.tpl",
	)
}

func templateConditionTpl() (*asset, error) {
	bytes, err := templateConditionTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/condition.tpl", size: 1089, mode: os.FileMode(420), modTime: time.Unix(1510558012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateCondition_baseTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd7\x57\x78\xbe\xa2\xfb\xe9\xae\xfe\x17\xed\xab\x9e\x76\xad\x78\x3e\x65\xfe\xb3\x8e\x09\x3a\x0a\x4f\x76\x74\x3f\x5b\xb3\xf0\xd9\xec\x2d\xcf\xa6\x6d\x78\xb2\x67\xd6\x8b\x65\x6d\xcf\x67\x4f\x7b\xbf\xa7\x07\xa4\x6a\xdd\xac\x27\x3b\x3b\x9f\xec\x5e\xfc\x7c\x41\xe3\x93\x1d\xbd\x2f\x96\x35\x3e\x6d\xeb\x7d\xb1\x7f\xe6\xcb\xf6\x9e\xe7\x7b\xa6\x3d\x6d\x9b\xc9\xa5\xaf\xaf\x90\x54\xa9\x90\x9e\xaf\x57\x94\x98\x99\x53\xcc\x55\x90\x98\x9c\x9d\x98\x9e\xaa\x50\x5d\xad\xe7\x9c\x9f\x97\x92\x59\x92\x99\x9f\x17\x00\x11\xab\xad\xe5\xe2\x2a\xa9\x2c\x48\x55\x70\x4a\x2c\x4e\x05\x49\x2a\x14\x97\x14\x95\x26\x97\x28\x54\x73\x71\x06\x80\xf4\x28\x28\x28\x64\xe6\x95\x80\xa8\x84\xb4\xfc\xa2\x5c\x2b\xa5\x82\xc4\xf4\x54\xa5\x04\x2e\xce\xa0\xfc\xf2\x62\x4c\xd9\xa2\xfc\xf2\x62\x90\xac\x7f\x51\x4a\x6a\x91\x53\xa5\x42\x70\x49\x51\x66\x5e\x3a\x4c\x36\x1f\x24\x1a\x9f\x54\x09\x52\x11\x92\x98\x9d\xea\x57\x9a\x0b\xd2\xcf\xc5\x19\x9c\x9d\x59\x00\xe3\xd4\x72\x71\xa5\x95\xe6\x25\x2b\x68\x54\x28\x68\xc1\x5c\xa5\xa9\xe0\x9e\x5a\x02\xd5\xa1\xa1\x09\xb6\xb3\x9a\x8b\x33\x33\x4d\xc1\x40\xc1\xd6\x56\xa1\x42\x0f\xec\x98\x6a\x2e\x4e\xce\xa2\xd4\x92\xd2\xa2\x3c\x05\x43\x03\x2e\xce\x5a\x2e\x18\x0f\x22\x8f\xdb\x60\xa8\xed\xd8\x0c\x06\x87\x41\x4d\x0d\x2e\x7b\x50\xac\xd1\x80\x2a\xd7\x55\x30\xd4\x54\xd0\x42\xd8\x0a\x08\x00\x00\xff\xff\xac\x8b\x09\x24\xe2\x01\x00\x00")

func templateCondition_baseTplBytes() ([]byte, error) {
	return bindataRead(
		_templateCondition_baseTpl,
		"template/condition_base.tpl",
	)
}

func templateCondition_baseTpl() (*asset, error) {
	bytes, err := templateCondition_baseTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/condition_base.tpl", size: 482, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateCondition_extTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd7\x57\x78\xd6\xdf\xff\x62\xff\x06\x2b\x85\xea\x6a\x05\xbd\x90\xc4\xa4\x9c\x54\xe7\xfc\xdc\xdc\xd4\xbc\x12\x85\xda\x5a\x2e\x7d\x7d\x85\x17\xed\xab\x9e\xae\x9b\xf5\x64\x67\xe7\xd3\xae\xf9\x2f\x9a\xf7\xbe\x58\xbf\xfd\xe9\x9c\x15\x2f\xf6\xcf\x7c\xd9\xde\xf3\x74\xdd\xbc\xe7\x7d\x1b\xde\xef\xe9\x79\x3e\x65\xfe\xb3\x8e\x09\x4f\x67\xae\x78\xb2\xa3\xf7\xc9\x9e\x59\x2f\x96\xb5\x3d\x9f\x3d\x8d\x8b\xab\x20\x31\x39\x3b\x31\x3d\x55\xa1\xba\x5a\xcf\x39\x3f\x2f\x25\xb3\x24\x33\x3f\x2f\x00\x22\x56\x5b\xcb\xc5\x95\x56\x9a\x97\xac\xa0\x51\xa1\xa0\x05\xb2\xd9\x39\x27\xb1\xb8\xd8\x2f\x31\x37\x55\xa1\xb6\x16\xa4\x58\x53\x21\xb5\x22\x31\xb7\x20\x27\x55\x43\x53\xa1\x9a\x8b\x53\x5f\x5f\x21\x25\x5f\xa1\x38\x3f\x37\xb5\x24\x33\x2f\x5d\x4f\x4f\x8f\xab\x16\x10\x00\x00\xff\xff\x54\xf9\xa1\x8e\xbb\x00\x00\x00")

func templateCondition_extTplBytes() ([]byte, error) {
	return bindataRead(
		_templateCondition_extTpl,
		"template/condition_ext.tpl",
	)
}

func templateCondition_extTpl() (*asset, error) {
	bytes, err := templateCondition_extTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/condition_ext.tpl", size: 187, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateCondition_typesTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd0\xcf\x4a\x02\x41\x1c\x07\xf0\xfb\x3e\xc5\x3c\x40\xb8\xf4\x07\x1f\xa0\x22\x08\x3a\x04\xf5\x02\xa3\x8d\xdb\xd0\x3a\x23\xeb\x74\x90\xc5\x83\x85\x5a\xa9\xd4\xc1\x3f\xa8\x91\x95\x24\x12\x2a\x1a\x06\x6b\x1a\xbe\xcc\xce\xce\x7a\xea\x15\x62\x1b\xcb\x68\xbd\x74\x9b\xf9\xf1\xfb\xf0\xfd\xf2\x53\x55\x20\xda\x39\xfe\x76\xed\x66\x9f\xf9\x55\x5b\x14\x1b\xce\xc5\xcd\x0a\xb0\xad\x9c\xd3\x79\x70\xea\x43\xa7\xdc\xb7\x27\x35\xb7\x95\x11\xf5\xf2\xc7\x24\xef\x6d\xf5\x6a\xf6\xe8\xd2\x1e\x37\xc5\x7d\xca\xb6\x0a\x6e\x2b\xc5\x33\x05\x77\x5a\x9d\x65\xf3\x62\x52\xe6\x99\xaa\xa2\xaa\x20\x94\x00\x1a\x0d\x18\x10\xeb\x71\x25\x06\xc3\x27\x50\x43\xc0\x34\x03\x5b\x94\x1c\x61\x86\x29\xd9\x97\xb3\x64\x52\xf1\xb6\x45\xa3\xeb\x94\x86\xfc\xfd\x91\xe7\xd3\x6e\x33\x2d\x06\x63\x80\x09\x5b\x0d\x2a\x2c\x11\x43\xe0\xe0\x98\x1a\xcc\x1b\x20\x23\x02\xc3\xc8\x94\x66\x09\x58\x5f\x93\x60\x97\x30\xa4\x21\xc3\x47\x66\xa5\xe9\x12\x15\xdc\x90\x6a\x8f\x12\xcd\x9f\xf2\xda\x13\x67\x23\x31\x18\xf3\xbb\xdc\x42\x45\x74\x0a\x7f\xd2\x76\xbc\xcf\x7f\xe0\x77\xe0\x36\x3d\x0d\xe9\xc8\x27\xb9\x75\xce\xfb\xc5\x3f\x52\x8a\x4d\x4a\x75\x04\x89\x9f\x74\x2b\xa2\xd3\xb2\xad\x97\x45\x52\x9c\x19\x98\x68\xf3\x03\x7e\xbd\xfd\x15\x2b\x4f\xce\x6d\x43\x06\x01\x86\xa3\x28\x70\x88\xa3\x68\xde\x0d\xb2\x5f\xcd\x80\x99\xfc\x0c\x00\x00\xff\xff\xa5\x47\x6f\xd4\x28\x02\x00\x00")

func templateCondition_typesTplBytes() ([]byte, error) {
	return bindataRead(
		_templateCondition_typesTpl,
		"template/condition_types.tpl",
	)
}

func templateCondition_typesTpl() (*asset, error) {
	bytes, err := templateCondition_typesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/condition_types.tpl", size: 552, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateConfigTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4f\x6b\x33\x45\x18\x3f\xef\x7c\x8a\x71\x0f\x92\xc0\xb2\xf3\xb6\xfa\xbe\xaf\x2c\xcd\xa1\x6d\x2a\x0a\x6d\x11\xa5\x78\x34\x93\xdd\x27\xdb\xd1\xd9\x99\x30\x33\x5b\x1b\x4b\xa0\x07\x45\x84\x94\x56\xb0\x12\xaa\x1e\x84\x60\xad\x60\xd3\x93\x14\x5b\xf1\xcb\x64\xd3\x7a\xea\x57\x90\xd9\x6d\x62\x92\x26\xd2\xe7\xb4\x6c\x7e\x79\x7e\x7f\x66\xf6\xd7\xa4\xe1\x67\x34\x06\x1c\x4a\xd1\x40\x88\x25\x4d\xa9\x0c\x2e\x21\xc7\x05\x11\xca\x88\x89\x98\x7c\xaa\xa5\x70\x91\xe3\xc6\xcc\xec\xa6\x75\x3f\x94\x09\xa1\xda\xd0\x7d\x06\xa4\x0e\x10\x4b\xc2\x65\xac\x5d\xe4\x30\x99\x1a\xc6\xb1\xcb\x24\x29\x1e\x5d\x54\x46\xc8\xb4\x9a\x80\xab\x6b\xeb\x52\x34\x58\x8c\xb5\x51\x69\x68\xf0\x01\x72\xb6\x69\x02\xd8\x8e\x36\x8a\x89\x18\xd7\x2c\x4d\xe0\x46\x75\x5f\xd0\x04\xdc\x1a\x72\x3e\xb0\x4a\xe6\x22\xac\x46\x8b\x78\x4f\xea\x05\x88\x5d\xa9\x73\xc4\x8e\x06\x35\x1f\x91\x6a\x50\x39\x0b\xd5\xfa\x73\xa9\xa2\x39\x2c\x8f\xbf\xb8\x35\xd4\x7e\xf4\xb1\x29\x63\xfd\xc4\xc9\x6a\x44\x9b\x06\xd4\xbb\x8c\x43\x95\x15\x6c\x33\xcb\x6c\x40\x3e\x2d\x60\x7e\x83\x71\xf0\x23\xa6\xdc\x5a\x01\x25\x04\x0f\xbf\xff\x7a\x70\xf3\xc7\xe0\xef\x9f\xb2\xdf\xbb\x77\x3f\x5c\x66\x7f\x9d\x4e\x6d\x5d\x10\xd5\xd3\xad\x45\x72\xd3\x5b\xb3\x93\xa3\xa9\x65\x5b\x74\x9f\x33\x01\x1a\x33\x91\x67\xb7\x70\x59\xf2\x08\x74\x6b\xf9\xb2\xfe\xf1\xe0\xfa\xb7\x29\xa1\x67\x5f\x0e\x7f\x3c\xcc\x7a\xe7\xf7\x3f\x77\x86\xa7\x57\x0f\xb7\x9d\x7f\x6e\xba\xf7\x97\xbd\xec\xf0\x16\x2f\xbd\xc8\x67\x96\x58\xb3\x2f\x00\x3f\x87\xd8\x02\xad\x91\xff\x27\xce\xae\xfe\xcc\xfa\xd7\x93\xc4\xc3\x6e\x1f\x2f\xe1\x95\x15\xbc\xfc\x8e\x87\x09\x59\x7e\xf9\x0a\x6f\xad\x4d\x9f\x10\x65\xbc\xf5\xac\x13\xb2\xc0\x22\x4c\xab\xa2\xdb\xcf\x4e\x7e\x19\x76\xbe\xb9\xfb\xea\x7c\xd8\x3f\xce\x7a\x17\x98\xcb\x58\x49\x43\x0d\x8c\x05\x58\x76\xa3\x52\x98\xb5\x1d\xd1\x96\x7e\x96\x6d\x0b\x1c\xd9\xce\x0d\xe7\x3e\xcf\x0a\xdb\x59\xef\x2c\xbb\xfa\x36\xeb\x5d\x8c\xf9\x8a\xf7\xf8\x35\xce\x7a\x17\xc8\xd9\x84\x3d\xe0\x78\x7a\xe6\x70\x72\x0b\x1b\xdd\xbd\x89\x21\x04\xbf\x08\x36\x12\x50\x31\x88\xb0\xe5\x2d\x05\xab\x1c\x94\xf1\x96\x83\x75\xc5\x0c\x0b\x29\xf7\xde\x0a\x36\x94\x92\xca\x7b\x3b\xf8\x98\x2a\xc1\x44\xec\xbd\x0c\xb6\xa5\x61\x21\x78\xaf\x82\xf7\x45\x43\x7a\xaf\x83\x2a\xd4\xd3\x18\x39\x1b\x82\xd6\x39\xac\xea\x96\x08\xc7\x04\x75\x29\xf9\x8c\x16\xa0\xa2\xce\xe1\x13\x6a\x71\x93\x92\x08\xc9\x73\xcc\x4e\xfa\x77\xdf\xfd\xfa\x70\xdb\x69\x50\xae\x61\x70\x7d\x54\xbc\x18\xc7\x3b\xa5\x7f\xf1\x79\x3e\x31\x4b\x88\x6d\x3b\x2d\x39\x78\x36\x79\x2f\x49\xb9\x61\xf9\x93\xfd\xd0\xf7\xa8\xb2\xfd\x57\xa5\x86\x7e\x24\x53\x15\x02\xae\x8c\xfb\xeb\xa0\x8d\x9c\x51\x07\x60\x8c\x2b\x13\x85\x70\xd0\xb6\x6d\xd7\x48\x45\x88\x99\x60\xa6\x54\xb6\xd5\x10\x51\x43\x3d\x0c\x4a\xe1\xa0\x82\x8b\x52\xf4\x3f\x04\x1a\xd9\x8b\x51\x72\x6d\xe5\x92\x30\xff\xb7\x9f\x97\x6c\x19\x39\xac\x91\xc3\xdf\xa8\x60\xc1\xb8\x5d\xe1\xe4\x56\xf2\xe4\x4b\xa0\x54\x19\x39\x6d\xe4\x58\xb4\xbf\x23\x12\xaa\xf4\x2e\xe5\xa5\x82\xe6\xcd\xff\x24\x97\x17\x41\x46\x7a\xcb\xa8\x8d\xfe\x0d\x00\x00\xff\xff\x2e\x2a\xfb\x0a\xfa\x05\x00\x00")

func templateConfigTplBytes() ([]byte, error) {
	return bindataRead(
		_templateConfigTpl,
		"template/config.tpl",
	)
}

func templateConfigTpl() (*asset, error) {
	bytes, err := templateConfigTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/config.tpl", size: 1530, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateConfig_jsonTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xcb\x4e\x85\x30\x10\x40\xf7\x7c\x05\x99\xb5\x69\x7c\x00\x9a\x7e\x81\x2b\xe3\xc6\xb5\x19\xec\x88\x4d\xa6\x2d\xe9\x14\x15\x09\xff\x6e\x90\x9a\xcb\x5d\xf4\x76\xd7\x39\x27\x67\x66\xa9\xea\x1a\x4c\xaf\x3c\x3a\x02\x0d\xcb\xa2\x9e\xd0\xd1\xba\xc2\x55\x06\x63\x88\x69\x07\xcf\x21\xa6\x03\xf8\x08\x92\xc1\x63\x90\x23\x98\x84\xe2\x0e\x5e\x84\xe2\x31\x85\x22\x5f\x21\x9a\x9c\xcb\xbf\x7f\x81\xc3\x20\x0a\x0d\x8e\x89\xa2\x7a\xb7\x4c\xca\xd8\xad\xb3\xcd\x4b\x46\xbe\xda\xa1\xf5\x8a\xc3\x50\xd2\x1c\x7e\xb3\xf5\x24\xa0\x6f\xae\xff\x5e\xd9\x13\xfb\x43\xa0\xeb\xdb\xee\xa1\xb9\x6b\x9b\xb6\x2b\x9d\x86\x96\x67\xd0\x90\xe2\x44\x17\xb6\x1a\x9c\x05\xf4\xfd\x49\x60\xfa\x24\x3e\x9b\x10\xfa\x9e\xe9\x15\x65\xf6\x6f\xc5\x20\x68\xd8\x92\x50\xad\xbf\x01\x00\x00\xff\xff\x8e\x77\x2c\x2d\xb0\x01\x00\x00")

func templateConfig_jsonTplBytes() ([]byte, error) {
	return bindataRead(
		_templateConfig_jsonTpl,
		"template/config_json.tpl",
	)
}

func templateConfig_jsonTpl() (*asset, error) {
	bytes, err := templateConfig_jsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/config_json.tpl", size: 432, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateControllerTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\xdf\x4b\xdc\x58\x14\xc7\x9f\xe7\xfe\x15\x17\x59\x96\x64\x59\x32\xee\x3e\x0a\xc2\xe2\x8f\x95\x85\x65\x19\xd4\x7d\x92\x45\x62\x72\xcc\x66\x37\xb9\x37\x3d\xf7\xa6\x3a\x84\x40\x1f\xfa\x60\xa1\xad\xd0\x56\xdb\x22\x4a\xa7\xf8\xd0\x27\x9d\x42\x2d\x6d\xad\xf4\x9f\x31\xe9\xcc\x53\xff\x85\x72\x93\x38\x3f\x9c\x89\x38\x0a\xfa\x36\x73\xbf\xe7\x7b\xee\xb9\x9f\xef\x61\x98\xc0\xb4\xfe\x37\x1d\xa0\x51\x64\x4c\x73\x26\x91\x7b\x1e\x60\x2d\x3f\x8c\x63\x42\x5c\x3f\xe0\x28\xa9\x46\x2a\x06\x1d\x8b\x22\xa3\x86\xdc\x41\xd3\xff\xcb\xf4\x21\x8e\xab\xb9\xcb\x76\xa5\xcb\x59\xc7\x34\x56\x5a\xbb\x00\x78\xd7\xb5\xa0\x5b\x49\x29\xa5\x44\x27\x51\xf4\xc3\x0c\x2f\x4e\x27\x26\x8d\xce\xe7\x38\x26\xb2\x1e\xe4\xc3\x79\xa6\x10\x79\xa7\xee\x9c\x54\x48\x0c\x2d\x49\x23\x52\x99\x32\x05\x74\x05\x12\x13\x52\xad\xd2\xdf\x16\x5d\xe9\x01\x6d\x7d\x79\x96\xec\xec\x25\x1b\xcf\x5b\x8d\x37\xd9\xf1\x0c\x08\x0b\xdd\x40\x4d\xdd\x2f\x46\x11\x9a\xcc\x01\x6a\x4c\x73\x2f\xf4\x99\x88\x63\x55\x5e\x33\xd1\xf4\xd5\x10\xf9\xfd\xf4\x4e\x08\x58\x57\xdf\x67\x99\x74\x65\xbd\x86\x3c\x00\x94\xf5\xc5\x7a\xa0\xd4\x55\xd3\x13\x90\xbd\x7f\x9a\xfb\x3e\x30\xa9\x88\x44\x11\x30\xbb\xb7\x5b\xa0\xa0\xe7\x8d\x5c\x26\xcf\x4c\xc9\xc9\xd3\xe4\xc1\xa3\x76\xe3\xe8\xdb\xe7\x87\xed\xe3\x17\xad\x83\xfd\x5f\xc6\x48\xd7\x84\x7c\x4d\x0c\x9a\xd2\xc3\xcd\x76\xe3\x28\xdd\x6d\xa4\x5b\xcd\xae\x6f\xbc\xd7\xc8\xd1\x06\x5c\x5e\xa9\x17\x66\x21\xd1\x65\x4e\xc7\xff\xf8\x49\xf2\x69\x33\xdd\x6d\x9c\x1e\xbf\xcf\x4d\x0b\xa1\x65\x81\x10\xf4\xd7\xf1\x71\x1a\xf1\x95\xff\xc0\x92\x31\xed\x0d\x29\x8e\x8d\xfe\x4c\x68\xba\xd5\xfc\x7a\x7c\x3f\x73\x23\x0f\x25\x20\xad\x7a\xae\x90\x74\xc9\x01\xf9\x0f\x59\x0d\x99\x45\xb5\x75\xfa\x53\x59\x92\x3a\xfd\xd3\x15\x52\xd3\x55\x94\x16\x67\x36\x9d\x98\xa4\xeb\x86\x03\x52\xad\x97\xa6\x93\x8a\x2d\x7f\xa6\x80\xd8\x39\x2f\x56\x49\xd3\x8d\xcc\xa8\x3c\x3a\xa9\xac\x1b\xff\x9a\xcc\xf6\x00\x67\x11\x39\x6a\x80\x98\x1d\xaa\xfa\xfc\x49\xf3\x20\x02\xce\x04\x68\xb6\xd4\x87\x2d\xc9\xe9\x87\x7b\xe9\x6e\xa3\x64\x49\x0a\xf1\x26\x96\xe4\x0a\x09\x24\x87\x1f\x5b\x6f\x1b\x7d\x09\x38\x30\x42\x00\x73\x70\x35\xfe\x73\x20\xa7\xea\x59\xd9\xf5\x43\x48\xb7\x9b\xc9\xeb\xbd\xd6\x41\x33\x39\xd9\x1a\x08\xa1\x4f\xbc\xe1\x10\xfa\xb0\xba\x4c\x00\x4a\xba\x14\x70\x71\x39\xb4\x7f\x64\x86\x52\xba\x15\x52\x01\x75\xa4\x24\x63\x91\xf7\xf7\x51\xf0\x97\xcb\xd8\x17\x8d\x61\x24\xea\xcc\xf5\xce\x63\xdf\x79\x97\x6e\x37\xcb\xb0\xf7\x8a\xb7\x89\x3d\x0c\x6c\x53\xc2\x08\xd8\xff\xce\x0c\x17\x2c\xf5\xc5\xd4\x87\x23\x2f\x9a\x5e\x17\x79\xb2\xf1\xaa\xfd\x72\xbf\x04\x79\x9f\x78\x9b\xc8\x6d\xf0\x60\x24\xe4\x33\x99\xe1\x22\xe4\x43\xa1\x16\xb6\x91\x7f\x40\xce\xb8\x5e\x62\xb2\xde\xfb\xce\xd7\x15\x82\x1a\x1a\x41\x86\xc8\x28\x83\x35\x6d\x68\x8d\x6e\xcc\x83\xe3\x0a\x09\xa8\x8d\x70\x73\xfe\xfa\xc1\xff\x31\xb6\xba\x32\x50\x51\x0a\x45\x65\x50\x8f\xe2\x1e\x64\x35\x13\x05\xfc\xce\xd1\xd7\x7e\xcc\x3d\x65\xac\x8a\x47\xe4\x45\x24\xfe\x1e\x00\x00\xff\xff\xd8\x79\x1b\xc9\xe4\x09\x00\x00")

func templateControllerTplBytes() ([]byte, error) {
	return bindataRead(
		_templateControllerTpl,
		"template/controller.tpl",
	)
}

func templateControllerTpl() (*asset, error) {
	bytes, err := templateControllerTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/controller.tpl", size: 2532, mode: os.FileMode(420), modTime: time.Unix(1510557990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateController_baseTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xcd\x6e\x9b\x40\x10\x3e\x7b\x9f\x62\xba\x27\x88\x80\x44\xaa\xd4\x83\xa5\x1c\x12\xc7\xfd\x89\xea\x60\x15\xdf\xaa\x4a\x5e\xc3\x78\xbd\x2d\xde\xa5\xbb\x43\x83\x85\x78\xf7\x6a\x81\xb8\x76\x0e\x69\xc2\x8d\x99\x6f\xbe\x9f\xd9\xa9\x44\xfe\x4b\x48\x84\xb6\x4d\x66\x46\x93\x35\x65\x89\x76\x39\x14\xbb\x8e\x31\xb5\xaf\x8c\x25\x08\xd8\x84\x4b\x45\xbb\x7a\x93\xe4\x66\x7f\x29\x1c\x89\x46\xe1\xe5\x06\x51\x1a\xce\x42\xc6\xe8\x50\x21\xdc\x0a\x87\xff\x58\xc0\x91\xad\x73\x82\x96\x4d\x7a\xdc\x89\x00\xeb\xc6\x89\x7b\x67\xf4\x37\x74\x95\xd1\x0e\x4f\xf0\x59\x9d\xe7\xe8\x1c\x6c\x8c\x29\x61\xfc\xd6\x3f\x9d\xd1\x53\xee\x86\x16\x5f\xb3\xc9\xcc\x14\xe8\x3b\x4a\x13\x3c\x43\xe5\xa6\x40\x0f\x59\x38\xd9\x97\x1d\x59\xa5\xe5\x19\x64\xef\xa4\x47\xdc\x9a\xe2\x30\x92\xa0\xdd\x8a\x1c\xdb\xee\x09\xb1\x31\xc5\x81\xaf\xbd\x57\xb6\xad\x75\x0e\x41\x03\x17\xe7\x11\x43\x90\x48\x1f\x85\x2a\x9f\x32\x04\x68\x2d\xa0\xb5\xc6\x86\x3e\x47\x93\x48\xa4\x63\xef\x34\x6c\x3b\x46\x9c\xc2\x56\x94\x0e\x23\x58\x38\x39\xf5\x93\xc9\xdc\x4f\x07\x61\x17\x7a\xe1\x97\x74\x47\x86\x23\xbd\xb7\x7b\x1a\xe3\xd5\x0e\xc8\xd6\x18\x81\x5f\xc4\x14\x3c\xc9\xff\xa5\x8f\x84\x16\x5d\x75\xf6\x88\x61\xaf\x79\x27\x48\x7c\xe7\x7e\x8b\xfc\x07\x5c\x83\x47\xf9\xf2\x8c\x9a\x24\xad\xa9\xaa\x29\xf9\x8c\xa2\x40\x1b\xf0\x9b\xde\x43\x3c\xf2\xc7\x37\x65\x69\x1e\xe3\xd4\x2a\xa9\x34\x8f\x80\x5f\xf0\xf0\x2d\x83\x0b\xa4\x9d\x29\x9c\x9f\x5c\xa6\xd9\x2a\x82\x4f\xf3\x55\x04\xe9\x72\xf5\x25\x7d\xc8\x22\xb8\x9b\x7f\x9d\xaf\xe6\xaf\xa5\x5c\x88\x26\xbe\x91\xe8\xc9\xde\x7f\xb8\xba\x7a\x9b\x93\xa1\xd9\x3b\x69\x62\x8b\xbf\x6b\x74\x84\x45\xfc\xa8\x68\x37\x10\x65\x68\xff\xe0\x7d\x96\x3e\x04\x2f\x6f\x7b\x27\x74\x51\xa2\x1d\xae\xe2\xfc\xba\xd4\xd6\xff\xc0\xbb\x6b\xd0\xaa\xf4\x85\xe1\xb5\x9f\xdf\x63\xc8\x26\x1d\xeb\xfe\x06\x00\x00\xff\xff\x3a\xad\xaf\xa5\xe9\x03\x00\x00")

func templateController_baseTplBytes() ([]byte, error) {
	return bindataRead(
		_templateController_baseTpl,
		"template/controller_base.tpl",
	)
}

func templateController_baseTpl() (*asset, error) {
	bytes, err := templateController_baseTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/controller_base.tpl", size: 1001, mode: os.FileMode(420), modTime: time.Unix(1510224370, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateController_extTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd7\x57\x78\xd6\xdf\xff\x62\xff\x06\x2b\x85\xea\x6a\x05\xbd\x90\xc4\xa4\x9c\x54\xe7\xfc\xdc\xdc\xd4\xbc\x12\x85\xda\x5a\x2e\x7d\x7d\x85\x17\xed\xab\x9e\xae\x9b\xf5\x64\x67\xe7\xd3\xae\xf9\x2f\x9a\xf7\xbe\x58\xbf\xfd\xe9\x9c\x15\x2f\xf6\xcf\x7c\xd9\xde\xf3\x74\xdd\xbc\xe7\x7d\x1b\xde\xef\xe9\x79\x3e\x65\xfe\xb3\x8e\x09\x4f\x67\xae\x78\xb2\xa3\xf7\xc9\x9e\x59\x2f\x96\xb5\x3d\x9f\x3d\x8d\x8b\xab\x20\x31\x39\x3b\x31\x3d\x55\xa1\xba\x5a\xcf\x39\x3f\xaf\xa4\x28\x3f\x27\x27\xb5\x28\x00\x22\x58\x5b\xcb\xc5\x95\x56\x9a\x97\xac\xa0\x51\xa1\xa0\x05\xb2\xda\x39\x27\xb1\xb8\xd8\x2f\x31\x37\x55\xa1\xb6\x16\xa1\x5a\x53\x21\xb5\x22\x31\xb7\x20\x27\x55\x43\x53\xa1\x9a\x8b\x53\x5f\x5f\x21\x25\x5f\xa1\x38\x3f\x37\xb5\x24\x33\x2f\x5d\x4f\x4f\x8f\xab\x16\x10\x00\x00\xff\xff\xb7\x06\x59\x74\xc2\x00\x00\x00")

func templateController_extTplBytes() ([]byte, error) {
	return bindataRead(
		_templateController_extTpl,
		"template/controller_ext.tpl",
	)
}

func templateController_extTpl() (*asset, error) {
	bytes, err := templateController_extTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/controller_ext.tpl", size: 194, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDaoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\xcf\x6f\x1b\x45\x14\xc7\xcf\xbb\x7f\xc5\x63\x0f\xd1\x6e\x63\xd6\x41\x42\x1c\x52\x8c\xd4\xc4\x34\xaa\x54\xb5\x21\x09\xe2\x60\x59\xd1\xd8\xfb\x6c\x46\xd9\x9d\xb1\x67\xc6\xc8\xd6\x6a\x25\x0e\x1c\x7a\x81\x08\x09\x0a\xa4\x6a\x69\x4a\x2b\x21\x0e\x21\x07\x84\x8a\x02\xea\x3f\x13\xbb\xce\x89\x7f\x01\xcd\xcc\xfa\x47\xfc\x4b\xb9\x70\xf3\x8c\xbf\xef\xcd\xe7\x7d\xe7\xbd\x9d\x16\xa9\x1f\x91\x26\x42\x9a\x86\x65\xc2\x77\xed\x2a\xcb\x5c\x97\x26\x2d\x2e\x14\xf8\xae\xe3\x35\xa9\xfa\xbc\x53\x0b\xeb\x3c\x29\x12\xa9\x48\x97\x62\xb1\x86\xd8\xe4\x45\x2e\x12\xcf\x75\x3c\xa9\x04\x65\x4d\xe9\xb9\xae\x13\x82\x97\xa6\xe1\xae\xe0\x4d\x41\x92\x07\x24\xc1\x2c\x2b\xa6\x69\xb8\xcd\x59\x44\x15\xe5\x6c\x7c\x80\xb7\x54\x5b\xe6\x53\xa2\xc0\x75\x55\xaf\x65\xf0\xb6\x63\x22\xa5\x95\x95\x09\x07\xa9\x44\xa7\xae\x20\x75\x9d\x2d\x22\xb1\x4c\xb8\x9b\xb9\x6e\xa3\xc3\xea\xe0\x77\xe1\xd6\x9c\x3e\x80\x3d\x6c\x52\xa9\x50\xf8\x51\x0d\x6e\x71\x91\x84\x0f\x45\x82\x22\x58\xa0\xd5\x49\xbb\x61\x0d\x1b\x5c\xe0\x1e\x4a\x6a\x83\x02\xd7\x11\xa8\x3a\x82\x41\x57\x1f\x55\x2c\xc2\xe0\xf8\x78\xf8\xe6\xfc\xdf\xbf\x4f\x86\x6f\xbe\xeb\x3f\x79\xd6\x7f\xf4\xc3\xf0\xf4\xd7\x95\x0c\xf7\xa9\x54\x7e\x9d\xb3\x68\xa6\x20\xed\x4f\x00\x7e\xa5\x7a\x7d\xbb\x00\x28\x04\x17\x81\x06\xfa\x82\x08\x88\xa9\x54\x30\x2b\x72\x9d\xb6\x84\xcd\x12\x74\xc3\x1d\x54\xe5\x2d\x3f\x08\x3f\xe9\xa0\xe8\x1d\x90\x5a\x8c\xbe\x76\xd8\xfc\xb2\x5a\x2f\x30\x6a\x2d\xae\x51\x16\x95\xb1\x41\x3a\xb1\x32\xfa\xbb\xa6\x4c\xcd\x56\x80\xb6\x0c\x5c\xe7\xd0\x9c\xae\x33\xb7\x65\x78\x27\x8e\xfd\x35\x7d\xfc\xc4\x05\xbd\x32\x92\x59\x37\x06\x8f\xcf\xfb\x2f\x9e\x0d\xbe\x79\xd5\x3f\xfe\x65\xa5\x1b\xf7\x98\x44\xa1\x7c\x64\x8a\xaa\xde\x8c\x23\x01\xf8\x94\xa9\x0f\xde\x9f\xb6\x80\x46\x63\xa4\x49\xb1\x79\x92\x35\x9b\x65\x82\x97\x8b\xe7\xe0\x9e\xfc\x31\x78\x7c\x7e\x03\xb8\x4f\x5b\x11\x51\xb8\x0c\xce\x40\x69\xa6\xc3\x05\x48\x79\xe8\x1c\xd2\x02\x1c\xdb\x39\x97\xaf\xbf\x1c\x3c\x3d\x1d\x9e\x9d\xf7\xff\xf9\x7e\x25\xd4\x0e\x2a\x9f\x46\x40\x99\x0a\xc0\x5f\xde\x2b\x39\xf4\x66\x69\x86\x3b\xbd\x17\x6d\x02\x8d\x32\xd7\x99\x63\xde\x43\x12\x2d\x20\x36\xeb\xc5\x46\x3e\xff\x6b\xf0\xf5\xd9\xe0\xe7\x57\xc3\xdf\x5f\x0c\x9e\x9e\x5e\x5e\xfc\x59\x18\x17\x73\xf9\xfa\xb7\x9b\x15\xb3\xd5\xd3\x9d\xbf\x62\x22\x96\xd7\x68\x66\x61\xb3\x34\x37\x0e\xe9\xff\x35\x10\x00\x00\x4b\x67\x82\x36\x20\x46\xe6\x9b\x15\x94\x4a\xb0\xa1\x11\x47\x2e\xce\x02\x5a\x3f\x9d\xec\xda\x28\x55\x36\xaa\x0b\x7d\xee\x3f\x7a\x7e\xf5\xd3\xcb\x1b\x77\x48\x19\x63\x54\xb8\xdc\xd1\x95\x8d\x9b\x07\x77\x57\xb6\xec\xdb\x8b\x6f\xfb\x67\x27\x57\x17\x3f\x0e\xcf\x5e\xbe\x3d\xf9\x6a\xba\x03\x56\x92\x2d\xf7\x77\x01\xa8\xb6\x1c\xf4\x47\xda\x48\xf7\x51\xe9\x2f\xf5\xf5\x35\xa4\xe6\x4a\xd2\x54\x10\xd6\x44\x08\xb7\x79\xdc\x49\x98\xcc\x32\xb3\x4d\x1b\xa0\x53\x87\x69\x1a\x7e\x6c\x9a\x78\x57\xf0\x16\x0a\xd5\xb3\x67\xc0\x3b\x25\x60\x34\xce\x73\xd8\x3c\xb4\x01\xd8\x86\x19\xf9\x67\xa4\xd5\x42\x71\xa0\xdf\x20\x6f\xdf\xbc\x73\x5e\x96\x81\x69\x99\xb6\x0c\xef\xd2\x58\x17\xa1\x9b\xca\xe6\x3d\x3c\xac\x73\xa6\x08\x65\xd2\x2b\xac\x04\x08\x20\x4d\x31\x96\xb8\x2a\xd9\x4d\x52\xb0\x28\x2f\x38\xcb\xdd\xb0\x3b\xce\xa8\xfe\x87\x22\x42\xb1\xd5\x9b\xd4\xeb\x38\xc4\x5e\x7b\xfe\x6a\x87\xfb\xad\x98\xda\x47\x69\x24\x0e\x7d\xfb\x5f\x50\x00\xaf\xa0\x27\x64\xd4\xde\x44\x88\x00\x3e\xca\x9b\xdb\xe1\x56\x7d\xc7\xa6\xab\x54\x6d\x90\x9e\x3f\xc7\x69\x70\x01\x54\x6f\x6f\xdc\x06\x0a\x1f\x8e\xa3\x6f\x03\x5d\x5f\xb7\xe1\x4e\x6d\x11\x07\x11\xa2\x42\xab\x05\xf0\xc0\x1c\xec\x38\x8a\x34\xb5\xca\xf3\xcc\x2a\x07\xa9\x8d\x40\xd6\xd6\xa0\x26\x44\xe5\xbd\xaa\x1e\x3a\x2f\x42\x59\xf7\xf2\xec\x26\xb0\x04\xde\xbb\x36\xd0\x50\x4d\x23\x97\x40\xdf\x2c\x8b\xfc\xc9\x5e\x01\x14\x69\xae\xeb\x7c\x1b\x55\x73\xb8\x09\x1a\x5d\x4f\x6e\xce\x94\x3e\x0c\x43\x2d\xcb\xf4\x28\xbb\x63\xdd\x7d\x9a\x8c\xfc\xdc\x41\x75\x40\x8e\xf0\x41\x27\xf1\x83\xfc\x2e\x77\x50\xed\x1f\xd1\x96\xd9\x9a\x8c\x59\x5b\xba\x99\xfb\x5f\x00\x00\x00\xff\xff\xc4\x8d\x25\xd5\x8b\x09\x00\x00")

func templateDaoTplBytes() ([]byte, error) {
	return bindataRead(
		_templateDaoTpl,
		"template/dao.tpl",
	)
}

func templateDaoTpl() (*asset, error) {
	bytes, err := templateDaoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dao.tpl", size: 2443, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDao_baseTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xcd\x8e\xd3\x30\x10\x3e\xc7\x4f\x31\xf2\xc9\x6e\x77\x93\x2b\x5a\xa9\x02\x95\x20\x38\xb0\x50\xba\x70\x46\x93\x64\x92\x8d\x48\xe2\xee\xd8\x61\x5b\x59\xbe\x23\xc1\x99\x03\x82\x33\x12\x27\x5e\xaa\x3c\x07\x72\x8b\xba\x65\x59\xf6\x38\xf3\xfd\xf8\xf3\x67\xaf\xb0\x7c\x87\x0d\x81\xf7\x69\x8e\x66\xb1\x9f\x42\x10\xa2\xed\x57\x86\x1d\x28\x91\xc8\xa6\x75\x97\x63\x91\x96\xa6\xcf\xd0\x3a\x5c\xb7\x94\x15\x44\x8d\xc9\x3a\xd3\x58\x79\x1f\xc1\x70\x2f\x45\xf2\x16\x8e\x19\x8d\x39\xb5\x57\xdd\x69\xc5\xed\x7b\xe2\xac\xdf\xd8\xab\x4e\x8a\x24\x05\xe9\x7d\xba\x60\xd3\x30\xf6\x2f\xb0\xa7\x10\xb2\x98\xe9\x26\xd2\x7f\x48\xa5\x19\x6a\x29\xb4\x10\xf5\x38\x94\xd0\x0e\xad\x53\x1a\xbc\x00\x00\xa8\xd0\xe1\x85\x19\xb9\x24\x38\x9b\x41\x7e\x98\xd2\x37\x96\x18\xa6\x20\xcf\x24\x4c\x8f\xf7\x0b\xb4\xf6\xda\x70\x15\xb1\x47\xae\x5c\xa9\x5b\xf8\x33\x63\xdd\x9d\xba\xd8\xd4\x14\xa4\xce\x6e\x01\x31\x63\x04\x1e\x96\x97\xc8\x96\xdc\x6c\x74\xf5\x03\xb9\x0b\x67\xb8\x4f\x97\xd4\xb4\xd6\x11\xe7\xbb\x2e\x94\xdc\x97\x71\xb2\xc3\xf2\xe5\xf9\xe6\xe2\xd5\x73\xfd\x2f\x19\x1d\xce\xd1\x92\x92\x15\xd5\x38\x76\x4e\x9e\xc0\x41\x79\x73\x65\x2d\x92\x9d\x0d\x15\x63\x03\x33\xa8\xb1\xb3\x24\x12\xef\x19\x87\x86\x20\x7d\x8d\x45\x47\x36\x84\x63\xe7\x73\x53\x51\xa7\x06\xba\x56\xde\xa7\x8f\x3b\xb4\x76\xdf\xb1\xd6\x51\x48\x43\x15\x82\x08\x42\xb8\xcd\x8a\x20\x26\xc8\xd1\x80\x75\x3c\x96\x0e\xbc\x48\xaa\x02\x26\xd1\xed\x25\xf7\xc4\x91\xb7\x7b\x10\xb5\x86\xc9\x1f\xae\x86\x82\x6a\xc3\xb4\x24\xdb\x3a\x62\xf5\x97\x40\x1f\x68\xd1\x6b\x9d\x56\x05\xcc\xa0\x2a\x44\xc2\xe4\x46\x1e\x60\x7d\xb7\xe3\x53\x72\xf9\x5c\x69\x38\xf8\x44\x75\x5b\xc3\xde\x60\x06\x43\xdb\xc5\x4d\x12\x7f\x6a\xfa\x84\xd9\xb0\x92\xdb\x9f\x5f\x7e\x7d\xfd\xb1\xfd\xf0\x6d\xfb\xfd\xe3\xf6\xd3\xe7\x7c\x2e\xb5\x48\xc2\xe1\xa4\x49\xd4\x8a\x20\x7e\x07\x00\x00\xff\xff\xe8\x89\xf1\xd2\x1a\x03\x00\x00")

func templateDao_baseTplBytes() ([]byte, error) {
	return bindataRead(
		_templateDao_baseTpl,
		"template/dao_base.tpl",
	)
}

func templateDao_baseTpl() (*asset, error) {
	bytes, err := templateDao_baseTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dao_base.tpl", size: 794, mode: os.FileMode(420), modTime: time.Unix(1510559634, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateDao_extTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd7\x57\x78\xd6\xdf\xff\x62\xff\x06\x2b\x85\xea\x6a\x05\xbd\x90\xc4\xa4\x9c\x54\xe7\xfc\xdc\xdc\xd4\xbc\x12\x85\xda\x5a\x2e\x7d\x7d\x85\x17\xed\xab\x9e\xae\x9b\xf5\x64\x67\xe7\xd3\xae\xf9\x2f\x9a\xf7\xbe\x58\xbf\xfd\xe9\x9c\x15\x2f\xf6\xcf\x7c\xd9\xde\xf3\x74\xdd\xbc\xe7\x7d\x1b\xde\xef\xe9\x79\x3e\x65\xfe\xb3\x8e\x09\x4f\x67\xae\x78\xb2\xa3\xf7\xc9\x9e\x59\x2f\x96\xb5\x3d\x9f\x3d\x8d\x8b\xab\x20\x31\x39\x3b\x31\x3d\x55\xa1\xba\x5a\xcf\x25\x31\x3f\x00\xc2\xab\xad\xe5\xe2\x4a\x2b\xcd\x4b\x56\xd0\xa8\x50\xd0\x02\xd9\xe9\x9c\x93\x58\x5c\xec\x97\x98\x9b\xaa\x50\x5b\xeb\x92\x98\xaf\xa9\x90\x5a\x91\x98\x5b\x90\x93\xaa\xa1\xa9\x50\xcd\xc5\xa9\xaf\xaf\x90\x92\xaf\x50\x9c\x9f\x9b\x5a\x92\x99\x97\xae\xa7\xa7\xc7\x55\x0b\x08\x00\x00\xff\xff\x48\x45\x3e\x08\xb4\x00\x00\x00")

func templateDao_extTplBytes() ([]byte, error) {
	return bindataRead(
		_templateDao_extTpl,
		"template/dao_ext.tpl",
	)
}

func templateDao_extTpl() (*asset, error) {
	bytes, err := templateDao_extTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/dao_ext.tpl", size: 180, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateEntityTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xbf\x6e\xd4\x40\x10\xc6\xeb\xec\x53\x8c\x5c\xd9\x08\xd9\x3d\xed\x85\x82\x06\x52\xdc\x03\xc4\x71\x36\x96\xc1\xbb\x6b\xed\xae\x25\xac\xd1\x14\x69\x2e\x40\x12\x1d\x05\x3a\x29\x97\x02\x10\x52\x14\x21\x84\x52\x50\x04\xb0\x94\x97\xf1\x3f\xaa\x7b\x05\xb4\x3e\x03\x02\xca\xf9\xe6\x37\xf3\xe9\xfb\xa2\x08\xfa\xeb\xd3\xf6\xdb\x72\x38\xf9\xd8\xbe\xba\xee\xdf\xbc\xed\x5e\xbc\xbe\x0f\xcd\xed\x69\xf7\xe9\x7d\x77\xf9\xa5\x5b\xdd\x34\xf5\x7a\xb8\x5a\xf4\x97\xab\x4d\x7d\xe6\xa8\xcf\xeb\xe6\xeb\xcb\xe6\xfb\x87\xfe\xdd\x71\x73\x7b\x3e\x5c\x1d\xb7\x8b\xf3\xe1\xee\xe2\xc7\xc9\x59\x5f\xaf\xda\xc5\x05\x8b\x22\x38\xa8\x20\x55\xa1\x8e\xb3\xdc\xb0\x22\x4e\x9e\xc5\x29\x07\xc4\x70\x57\xed\x6d\x07\x22\xc6\x32\x51\x28\x6d\xc1\x67\x3b\x88\x3a\x96\x29\x87\xf0\xd1\x28\x19\x22\xf0\x10\x43\x22\x8f\x21\x72\x79\x48\x14\x30\xf7\xb5\x5b\x2e\x87\xbb\x9b\x4d\xbd\x46\x84\x70\x1e\x1f\xe4\x7c\xa6\x84\xe0\xd2\x02\x11\xb3\x55\xe1\x3c\x20\x9c\xe5\xb1\x31\x8f\x63\xc1\x81\x08\x8c\xd5\x65\x62\x01\x19\x00\xc0\x6f\x9f\x99\xca\x4b\x21\x0d\x91\xe3\x1f\x4a\x9b\xd9\x6a\x4f\xab\x82\x6b\x5b\xfd\x3a\xfc\x7f\x33\x77\x06\x44\xb0\xaf\xb4\x78\xe0\x25\xe3\x0b\xdf\x61\xd3\x49\x80\x18\x3e\xd1\x62\x9e\x09\xbe\xcb\x4d\x42\xe4\xc1\xd1\x88\x22\x8e\x88\x13\x9e\x1a\x25\xff\x12\x0e\xb9\x49\x74\x56\xd8\x6c\xd2\xa7\x40\x44\xde\x3e\x44\xd1\x36\xcf\x9f\x8c\x53\x1b\xc4\xd8\x51\x29\x13\xf0\x9f\xc3\xbd\x7f\x13\x07\x30\x16\xe3\x26\x3f\x70\xf1\x33\x99\x02\xb2\x1d\xcd\x6d\xa9\xa5\xeb\x75\xaa\x6e\xe2\x3d\x46\x3f\x03\x00\x00\xff\xff\xa7\xb2\x84\x5e\x04\x02\x00\x00")

func templateEntityTplBytes() ([]byte, error) {
	return bindataRead(
		_templateEntityTpl,
		"template/entity.tpl",
	)
}

func templateEntityTpl() (*asset, error) {
	bytes, err := templateEntityTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/entity.tpl", size: 516, mode: os.FileMode(420), modTime: time.Unix(1510557329, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateEntity_extTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd7\x57\x78\xd6\xdf\xff\x62\xff\x06\x2b\x85\xea\x6a\x05\xbd\x90\xc4\xa4\x9c\x54\xe7\xfc\xdc\xdc\xd4\xbc\x12\x85\xda\x5a\x2e\x7d\x7d\x85\x17\xed\xab\x9e\xae\x9b\xf5\x64\x67\xe7\xd3\xae\xf9\x2f\x9a\xf7\xbe\x58\xbf\xfd\xe9\x9c\x15\x2f\xf6\xcf\x7c\xd9\xde\xf3\x74\xdd\xbc\xe7\x7d\x1b\xde\xef\xe9\x79\x3e\x65\xfe\xb3\x8e\x09\x4f\x67\xae\x78\xb2\xa3\xf7\xc9\x9e\x59\x2f\x96\xb5\x3d\x9f\x3d\x8d\x8b\xab\x20\x31\x39\x3b\x31\x3d\x55\xa1\xba\x5a\xcf\x25\x3f\x00\xc2\xa9\xad\xe5\xe2\x4a\x2b\xcd\x4b\x56\xd0\xa8\x50\xd0\x02\x59\xe9\x9c\x93\x58\x5c\xec\x97\x98\x9b\xaa\x50\x5b\xab\xa9\x90\x5a\x91\x98\x5b\x90\x93\xaa\xa1\xa9\x50\xcd\xc5\xa9\xaf\xaf\x90\x92\xaf\x50\x9c\x9f\x9b\x5a\x92\x99\x97\xae\xa7\xa7\xc7\x55\x0b\x08\x00\x00\xff\xff\xd7\xbe\x4b\x50\xb0\x00\x00\x00")

func templateEntity_extTplBytes() ([]byte, error) {
	return bindataRead(
		_templateEntity_extTpl,
		"template/entity_ext.tpl",
	)
}

func templateEntity_extTpl() (*asset, error) {
	bytes, err := templateEntity_extTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/entity_ext.tpl", size: 176, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateGlideTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcb\xc1\x0d\xc2\x30\x0c\x00\xc0\x7f\xa6\xc8\x02\x71\x28\x3f\x32\x04\x62\x05\xb7\x58\xc6\xa2\xc6\xad\x13\x22\x50\xd5\xdd\xf9\x21\x3e\xfc\xef\x16\x9c\xee\xc8\x54\xe2\xb6\xc1\xc5\x8d\x1d\xf5\x8c\x4a\xfb\x1e\x44\x17\xf3\x56\x42\x8a\x5f\xc3\xd2\x6e\xcf\x11\x26\xd3\x8c\xb5\xe1\x4b\x28\x8f\x44\x6c\x21\xc6\x4e\x5e\xc5\x1e\x25\xf6\x01\x4e\x70\xf8\xb3\xd8\x52\x5d\xe7\x74\x75\xe9\xe4\x59\xdf\x75\x9d\x7f\xef\x00\xc7\xf0\x09\x00\x00\xff\xff\x2e\xaf\x62\xe7\x91\x00\x00\x00")

func templateGlideTplBytes() ([]byte, error) {
	return bindataRead(
		_templateGlideTpl,
		"template/glide.tpl",
	)
}

func templateGlideTpl() (*asset, error) {
	bytes, err := templateGlideTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/glide.tpl", size: 145, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateMainTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xcf\x6e\x9c\x30\x10\x87\xcf\xf8\x29\x46\x73\x02\x11\x99\x7b\xa4\x3d\xa4\xdd\x56\x8a\xb4\xa9\xa2\xcd\xa1\x87\xaa\x2a\xb3\x30\xb8\xa3\x82\xbd\x32\x66\xbb\x5b\xc4\xbb\x57\x26\xdb\xf4\x8f\xb6\x51\x02\x27\xf0\x7c\xcc\xf7\xf3\xd8\x7b\xaa\xbe\x91\x61\xe8\x48\xac\x52\xd2\xed\x9d\x0f\x90\xaa\x04\x8d\x84\xaf\xc3\x4e\x57\xae\x2b\xa8\x0f\x74\x14\x2e\x76\xcc\xc6\xe1\x33\xb5\xa2\x75\xa6\x47\x05\x00\x80\x7d\xf0\x95\xb3\x07\x54\xc9\x17\xc0\x71\xd4\xf7\xde\x19\x4f\xdd\x07\xea\x78\x9a\x8a\x71\xd4\x5b\x37\x04\xf6\xf7\x8f\xfe\x69\x42\x95\xe8\x0b\x60\xe5\x6c\x83\x2a\x53\xaa\x19\x6c\x35\xa7\x4c\x33\x18\x55\x22\x0d\xcc\x4a\xfd\xe6\xad\xb3\x8d\x18\xbd\x1d\xec\x9d\xab\x19\x56\x2b\xc0\x9a\x0f\x18\xa1\xe4\x6f\xe4\x23\xef\xce\x6f\x6b\xf1\x5c\x05\xe7\x4f\xb7\xb6\xe6\x23\xac\x20\xf8\x81\x9f\xe1\x1f\x02\x05\xa9\xd6\xe2\x3f\x61\xd1\x7f\x27\x63\xd8\xe3\x67\x58\x01\xfe\xfa\x50\xc9\xa4\xe6\x7d\xc7\x09\xe8\x07\x0e\x1b\x17\xd7\xd3\x8d\x33\x7d\xec\xa1\x6f\x6a\xda\x07\xf6\x57\x50\x8e\xd8\x48\xcb\x96\x3a\xc6\x6b\x2c\xf3\x7f\x89\xf7\xd2\xf2\x5a\x7c\x8e\x05\x5e\xac\xc5\xb9\xe4\x25\x5e\xcd\xb6\xd7\x3c\xd8\xf2\x81\x5b\xbc\x2e\xf3\xf3\xd1\xe8\xdb\xe0\xe8\x77\xc2\x4d\x2c\x67\x79\xb9\xa0\x73\x47\xc7\x56\x2c\xf7\xff\x6f\xfe\xc7\x06\xee\xce\xf0\x62\x55\x2f\x3f\xf8\xa5\xa6\xc8\x2e\x13\xd5\x24\xed\x29\x6a\x2e\x1e\x50\x2c\x2e\xcd\x5f\xd3\xe9\xc5\x93\x8a\x6c\x96\x97\x53\x99\xcd\x2a\x69\xe0\x09\x7c\x67\x69\xd7\xf2\x4d\x7f\xb2\x15\x8c\x4f\x41\xe6\xfb\x37\x2f\xa6\x8f\xbf\x4c\xea\x7c\xab\xb7\x83\x4d\x33\x35\xa9\x9f\x01\x00\x00\xff\xff\xba\x3b\x4f\x44\xf2\x03\x00\x00")

func templateMainTplBytes() ([]byte, error) {
	return bindataRead(
		_templateMainTpl,
		"template/main.tpl",
	)
}

func templateMainTpl() (*asset, error) {
	bytes, err := templateMainTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/main.tpl", size: 1010, mode: os.FileMode(420), modTime: time.Unix(1510559801, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateReadmeTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x91\xcd\x6e\xd3\x40\x10\xc7\xef\x79\x8a\x91\xdc\x03\x48\x8d\x0b\x44\xe2\x80\xe4\x33\x27\xde\x21\x4e\xbc\x72\x2d\x39\x76\xb4\xb6\x15\x8e\x69\x85\x9b\x14\x1b\x91\x83\xb1\x44\xd2\x08\xac\x42\x1a\x45\xc1\xcd\xa1\x80\x9b\x8f\xe6\x61\xd8\x0f\xfb\xd4\x57\x40\x1b\x07\x15\xb8\xac\xfe\x33\xb3\x3f\x69\xf6\xb7\x92\x04\x34\x3d\xcf\x2f\x7d\xf6\xed\x6b\x31\xfb\x52\x79\x2a\x43\x31\x89\xa9\xdf\xe7\x49\x4a\xb6\xe3\x72\x46\x96\x67\x2f\x4d\x43\x43\x8f\x68\xe8\xf3\x34\xe1\x83\x33\xfa\x71\xfa\xb8\x52\xaf\xd7\x2b\x07\xa0\xdb\xa0\x23\x17\x74\xc3\x3d\xf6\x1a\x72\xd3\x6e\x1d\xbd\x52\x1d\x17\xe1\x96\x61\x69\xce\x91\x2e\xb8\xdd\xcd\x67\x32\xd0\x8b\xa9\x83\x9b\x24\x0b\x58\xbc\xa0\xab\x25\xc9\xba\x24\x9b\x15\xc9\x2d\x1f\xa5\x87\xc0\xae\x23\x3a\x39\x7d\x01\xe8\xb5\xda\x6a\x9b\xa8\x52\x93\x81\x05\x3f\xf3\x9b\xb1\xda\x36\xaa\xba\x8d\x55\xc3\x74\xe8\xfb\x6b\x76\x7e\x95\x27\x21\x8b\x7b\x64\xf5\x83\x45\x77\xb4\xbf\xd8\x03\x7c\x94\xd2\xcd\x07\x92\x05\xfb\xbd\xfe\xc2\xc0\x42\x1d\xd0\x0c\x6c\xa9\x2d\x04\x55\xad\x21\x8b\xa0\x68\x8d\x5d\x3e\xb6\x1d\x57\x31\xed\xa6\x6a\x8a\xb4\x6b\xb5\x6d\xec\x2a\xb5\xda\x93\xe7\xbb\xca\x73\x10\x56\xc4\x51\xce\x54\xc7\xe9\xd8\x58\x53\xfe\x04\x00\x09\x68\x7f\x4c\xaf\x02\x1a\xc6\x87\x40\xb6\x29\x8b\x6e\xf9\x28\xa3\xcb\x88\x0f\xdf\x14\xfe\x3b\xbe\x49\xff\x5b\xc7\x6b\x6b\xaa\x8b\x40\x02\x36\xba\x61\xf1\xa2\x34\x70\xbf\x0e\xc9\x7a\x98\xf7\x66\xf4\xed\x94\x47\x9f\x58\x7f\x40\x56\x97\xfc\xf3\x89\x50\x2c\x24\x3e\x50\xfb\x4f\xb9\x1b\xe7\xdf\x63\x1a\xfa\x95\x03\x68\x20\x04\xd8\xb3\xa0\xaa\x23\x4b\xb3\x9b\x8a\x8b\x3d\xf1\x50\xbb\xf3\x50\x49\x90\x6f\x07\x79\x12\xde\xaf\x43\x3e\x9f\x93\xac\xcb\xe6\x49\xd9\x29\x2e\xba\xf9\xe4\x84\x85\x3d\x9a\x0e\xff\x61\xc4\x46\x59\x90\x6f\x36\x4e\x47\xd5\x75\x84\x4b\xe9\xbf\xba\xa7\xc2\xf0\xef\x00\x00\x00\xff\xff\x49\x3f\x28\xc7\x39\x02\x00\x00")

func templateReadmeTplBytes() ([]byte, error) {
	return bindataRead(
		_templateReadmeTpl,
		"template/readme.tpl",
	)
}

func templateReadmeTpl() (*asset, error) {
	bytes, err := templateReadmeTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/readme.tpl", size: 569, mode: os.FileMode(420), modTime: time.Unix(1510135533, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateRouterTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x6b\xc3\x30\x0c\x85\xcf\xd1\xaf\x30\xa6\x8c\x04\x8a\xd3\x5d\x0b\x85\x95\xee\xd2\x4b\x09\x5b\xd9\xdd\x75\xb4\xcc\xcc\xb1\x83\xed\xb0\x81\xf0\x7f\x1f\x49\x43\x93\x8e\xea\x64\x4b\xef\x7d\x7a\x2a\x4b\xf6\xb2\xaf\x8e\x1f\xe8\x83\x76\x96\x3d\x8b\x8d\xd8\xc0\xd0\x3c\xeb\x68\x90\x11\x89\xca\xbb\xc6\xcb\xf6\x24\x5b\x4c\x89\xed\xab\xe3\x38\x7e\xc5\xa0\xbc\xee\xe2\x60\x7a\x28\xea\xa4\xfa\x96\xcd\x48\x78\x73\x7d\x44\x5f\x5d\x1b\x29\x01\xe8\xb6\x73\x3e\xb2\x1c\x32\xde\xe8\xf8\xd5\x5f\x84\x72\x6d\x29\x43\x94\xbf\x1a\xcb\x0b\x62\xe3\x38\x64\xfc\x3f\xb7\x24\x12\x07\x67\xa3\x77\xc6\x2c\x78\x1c\x0a\x20\x62\x2b\x75\x1b\x6d\x77\x8f\x74\xf0\xd9\x5b\xc5\xb4\xd5\x31\x2f\x18\x41\x66\x03\xdb\xee\xd8\xb8\x4d\x9c\xf0\x67\xd8\x11\x3a\xa9\x30\xe7\xa5\xec\x34\x5f\x43\x96\x11\x79\x69\x1b\x64\x2b\x1c\xa4\xe2\x2c\x2f\x06\x43\x4a\xc0\xa6\x9a\xcc\xef\x4b\x2f\xd1\x0a\xc5\x35\x30\x5f\xdf\x94\x4b\xf5\xd1\x2a\xd3\xd7\x98\xdf\x0d\x87\x7a\x22\x5a\x5c\x91\x92\x18\x59\x07\x23\x43\xb8\x02\xe7\xab\x28\xdd\xb3\x8b\xf9\xbb\x78\x12\xa1\xad\xa7\xbc\x05\xcc\x19\xf6\x75\x3d\x47\xb6\xa1\x80\x04\x7f\x01\x00\x00\xff\xff\x16\x6a\x55\xe4\x09\x02\x00\x00")

func templateRouterTplBytes() ([]byte, error) {
	return bindataRead(
		_templateRouterTpl,
		"template/router.tpl",
	)
}

func templateRouterTpl() (*asset, error) {
	bytes, err := templateRouterTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/router.tpl", size: 521, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateServiceTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x4f\x6b\xe3\x30\x10\xc5\xcf\xd6\xa7\x18\x72\x58\xa4\x65\xd1\x5e\x96\xbd\xf5\x92\x04\x4a\xa1\x94\xd0\xd2\x53\xe9\x41\xb1\x27\x41\x34\x91\xcc\x68\xd2\x3a\x08\x7d\xf7\xa2\xe6\x4f\x43\x1c\x07\xf5\x3a\x7a\xef\xfd\xde\x8c\xdd\x9a\xfa\xcd\x2c\x11\x62\xd4\x4f\x48\xef\xb6\xc6\xd9\x6e\x92\x92\x10\x76\xdd\x7a\x62\x90\xa2\xd2\x30\x8a\x51\xcf\xc8\x2f\xc9\xac\x1f\xcc\x1a\x53\xfa\x1b\xa3\x9e\x78\xd7\x58\xb6\xde\x1d\x4d\xa3\x41\xed\xd4\xf8\x12\xd5\xa9\x48\x09\xc1\xdb\x36\x97\x03\x3d\x59\x99\x10\xb2\x0e\x52\xda\x37\x85\xc0\xb4\xa9\x19\xa2\xa8\xc6\x26\xe0\x7e\x2a\xaa\xc6\x78\xf8\x7d\xee\x99\x1a\x2f\x92\x10\x8b\x8d\xab\x41\x76\xfd\xf7\xbd\x5b\xc1\x23\x2e\x6d\x60\x24\xa9\x06\x45\x99\xd8\xe9\x39\x2e\x3c\xe1\xb7\x3c\xcf\x32\xfa\x06\x1c\x7e\xc8\x0b\x7c\xa5\x8f\xe2\x5f\x9d\x6e\xe6\x4a\x54\x84\xbc\x21\x07\x5d\x59\xb5\x7b\x1b\x58\xd6\xde\x35\xbd\x8b\xe4\x0f\xa1\x40\xbe\xbc\x9e\x3f\xfc\x01\x24\xf2\xa4\x72\xe5\x03\x2c\xb7\xd4\xc7\x2c\x55\xc6\xbe\x45\x96\xb6\x01\xeb\x58\x41\x6f\xb9\x41\xca\xce\x55\x8e\x18\x6f\xf3\x26\x57\x77\xfc\x09\xfb\x24\xae\xb0\xc3\x9d\x0b\x48\x2c\xfb\xff\x9c\x02\x69\x1d\xff\xff\x37\x88\x3b\x38\x0b\x41\xcf\x6d\x63\x18\x2f\x82\xbe\x00\xbd\xfc\x83\xa1\x30\x7f\x8a\x2b\x64\xbc\x76\xc9\xcb\x98\x13\x5f\x26\x7d\x06\x00\x00\xff\xff\xd3\x49\x3c\xec\x20\x04\x00\x00")

func templateServiceTplBytes() ([]byte, error) {
	return bindataRead(
		_templateServiceTpl,
		"template/service.tpl",
	)
}

func templateServiceTpl() (*asset, error) {
	bytes, err := templateServiceTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/service.tpl", size: 1056, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateService_baseTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcc\x31\x6e\xc4\x20\x10\x85\xe1\x3a\x9c\x62\xe4\x0a\x52\xe0\x13\xa4\xd9\xf4\xd9\x68\x93\x1c\x00\xf0\x98\xa0\x35\x60\x0d\x43\xe2\xc8\xf2\xdd\x23\x7b\xb7\xd8\x8a\xf6\xe9\x7f\xdf\x6c\xdc\xd5\x78\x84\x75\xd5\x1f\x48\x3f\xc1\xe1\xfb\x6d\xd9\x36\x21\x42\x9c\x33\x31\x74\x3e\xf0\x77\xb5\xda\xe5\xd8\x9b\xc2\x66\x09\xd8\x5b\x44\x9f\xfb\x4c\xb1\x13\x82\xff\x66\x84\x93\x29\x78\x17\xa0\x30\x55\xc7\xb0\x8a\xa7\xc1\x42\xa6\xa8\xcf\x14\x91\xc4\x26\xc4\x58\x93\x03\xb9\xc0\xf3\x43\xae\xc0\xe2\x98\x09\x2f\xe8\x43\x61\x24\xa9\xf6\xe7\xa2\x07\x0b\x2f\xc7\xfb\x0d\x7f\xcf\x14\xa5\xba\x8d\xfa\xab\x84\xe4\x65\x37\xe0\x68\xea\xc4\x9d\x6a\xb9\x3e\xa4\x4f\x32\x49\x2a\x40\xa2\x4c\x3b\x4c\xc8\x95\x12\x1c\xd4\x69\x0f\x64\x43\x70\x39\xc6\xc0\x2d\xe2\xf5\x28\x5a\x06\xe5\x69\xb2\xc6\x5d\x5b\xca\xe5\xde\x1c\xce\x7f\x00\x00\x00\xff\xff\x27\x18\x39\x5c\x94\x01\x00\x00")

func templateService_baseTplBytes() ([]byte, error) {
	return bindataRead(
		_templateService_baseTpl,
		"template/service_base.tpl",
	)
}

func templateService_baseTpl() (*asset, error) {
	bytes, err := templateService_baseTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/service_base.tpl", size: 404, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateService_extTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd7\x57\x78\xd6\xdf\xff\x62\xff\x06\x2b\x85\xea\x6a\x05\xbd\x90\xc4\xa4\x9c\x54\xe7\xfc\xdc\xdc\xd4\xbc\x12\x85\xda\x5a\x2e\x7d\x7d\x85\x17\xed\xab\x9e\xae\x9b\xf5\x64\x67\xe7\xd3\xae\xf9\x2f\x9a\xf7\xbe\x58\xbf\xfd\xe9\x9c\x15\x2f\xf6\xcf\x7c\xd9\xde\xf3\x74\xdd\xbc\xe7\x7d\x1b\xde\xef\xe9\x79\x3e\x65\xfe\xb3\x8e\x09\x4f\x67\xae\x78\xb2\xa3\xf7\xc9\x9e\x59\x2f\x96\xb5\x3d\x9f\x3d\x8d\x8b\xab\x20\x31\x39\x3b\x31\x3d\x55\xa1\xba\x5a\x2f\x38\xb5\xa8\x2c\x33\x39\x35\x00\x22\x52\x5b\xcb\xc5\x95\x56\x9a\x97\xac\xa0\x51\xa1\xa0\x05\xb2\xd7\x39\x27\xb1\xb8\xd8\x2f\x31\x37\x55\xa1\xb6\x16\xaa\x54\x53\x21\xb5\x22\x31\xb7\x20\x27\x55\x43\x53\xa1\x9a\x8b\x53\x5f\x5f\x21\x25\x5f\xa1\x38\x3f\x37\xb5\x24\x33\x2f\x5d\x4f\x4f\x8f\xab\x16\x10\x00\x00\xff\xff\x55\x46\xad\xcb\xbc\x00\x00\x00")

func templateService_extTplBytes() ([]byte, error) {
	return bindataRead(
		_templateService_extTpl,
		"template/service_ext.tpl",
	)
}

func templateService_extTpl() (*asset, error) {
	bytes, err := templateService_extTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/service_ext.tpl", size: 188, mode: os.FileMode(420), modTime: time.Unix(1510116951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateUtil_convert_interfaceTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcd\xb1\x6a\x03\x31\x0c\xc6\xf1\xd9\x7a\x0a\xe1\xc9\x86\xe4\x70\x42\xd3\xe1\xa0\x43\xe9\xd4\x4e\x1d\xba\x17\x63\x94\x60\xda\x93\x83\xac\xf3\x12\xee\xdd\x8b\x4b\x5a\x68\xb8\xad\xa3\x3e\xc1\xff\x77\x8e\xe9\x23\x9e\x08\x67\xcd\x9f\x00\x79\x3a\x17\x51\x74\x60\x6c\x55\x49\x85\x9b\x05\x63\x35\x4f\x64\xc1\x03\x1c\x67\x4e\xf8\x54\xb8\x91\xe8\x33\xab\xab\x98\x59\x49\x8e\x31\xd1\x65\xf1\xfd\xc0\x0b\x98\xb6\xc1\x77\x1c\x1f\xf0\x5a\x18\x1e\xb5\x64\x57\x07\x57\x55\x32\x9f\xbc\x07\x23\xa4\xb3\x30\x36\x58\xfe\x36\xdf\xf2\x44\xb7\xd1\x8e\x0f\xfd\xd1\xd3\x7a\x4d\x7f\x8f\xaf\x51\x2a\x39\xbb\x0f\xe1\x7e\x1b\x76\xdb\xb0\xc7\xdd\x61\x0c\x77\x63\x38\xd8\x0d\xae\x79\x7a\xeb\xbd\xd4\xc2\x6b\xe6\xcf\xfe\x7f\xf2\x57\x50\x0f\x0b\x7c\x05\x00\x00\xff\xff\xff\xf8\x3d\xed\x6d\x01\x00\x00")

func templateUtil_convert_interfaceTplBytes() ([]byte, error) {
	return bindataRead(
		_templateUtil_convert_interfaceTpl,
		"template/util_convert_interface.tpl",
	)
}

func templateUtil_convert_interfaceTpl() (*asset, error) {
	bytes, err := templateUtil_convert_interfaceTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/util_convert_interface.tpl", size: 365, mode: os.FileMode(420), modTime: time.Unix(1510218884, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateUtil_json_timeTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\xdf\x6b\xdb\x30\x10\xc7\x9f\xad\xbf\xe2\x26\x28\x48\xc5\x75\xd2\xb2\xee\x21\x2c\x7b\xda\x0a\x2b\xfb\x45\x53\xf6\xb2\x0e\xaa\xda\xe7\x44\xd4\x96\x8c\x7c\x4e\x56\x4a\xfe\xf7\x71\xb2\x53\x7b\xd0\xc0\xde\x1c\xdd\x37\x1f\x7d\xef\x7b\xa7\xc6\xe4\x8f\x66\x8d\xd0\x91\xad\x84\xb0\x75\xe3\x03\x81\x12\x89\x2c\x6b\x92\x22\x91\x6b\x4b\x9b\xee\x21\xcb\x7d\x3d\x33\x2d\x99\x3f\x16\x67\x0f\x88\x6b\x3f\xf3\xa1\xe6\x3a\xd9\x1a\xa5\xd0\x42\xd0\x53\x83\x70\xdd\x7a\x77\x6b\x6b\x04\x3e\xce\xf8\x4b\x88\xb2\x73\x39\xa8\xb1\xa6\xe1\xab\x09\xed\xc6\x54\xd7\xab\xef\xdf\x94\x06\xf5\xeb\xf7\xc3\x13\x61\x0a\x18\x82\x0f\x1a\x9e\x45\xb2\x35\x01\x5a\x32\x75\x03\x4b\x28\x6b\xca\x56\x4d\xb0\x8e\x4a\x25\xef\xe4\x49\x7b\x27\x65\x3a\xf2\x15\xea\xec\xca\x87\xda\x90\x92\x17\xf3\xf9\xbb\xb3\xf9\xf9\xd9\xfc\x02\xce\x2f\x17\xf3\xb7\x8b\xf9\xa5\xd4\x5a\x24\x01\xa9\x0b\x0e\xfa\x7b\x54\x04\xeb\x14\x9c\xad\xc4\xfe\x35\x7b\x2b\x0a\xd6\xad\x95\x86\x36\x7e\xb0\xa1\x81\xf0\xff\xb7\x4e\xc9\xa7\x23\xfa\xca\x62\x55\xdc\x3e\x35\xa8\x34\x58\x47\x13\xb4\x0f\x75\xc6\x85\x8f\x86\x90\xb5\x51\x79\x84\xb2\x42\x52\xc5\x68\x26\x46\x76\x8a\xb0\x7c\xe9\x41\x15\xc7\x0c\xac\x90\x6e\xcc\x4e\x6d\x4d\xd5\x21\x3b\xc0\x50\x9a\x1c\x9f\xf7\xba\x4f\x9f\x49\xb6\x84\xbe\xbc\x5c\x72\x46\x7c\x74\x30\xc9\x91\x25\x7b\x91\xb4\x3b\x4b\xf9\x06\x0a\x58\x2c\x7b\x6d\xa6\x78\xfc\xd1\x48\x6e\xda\xc9\xf8\x17\x22\x49\x30\x8b\x86\xf5\x50\xeb\x53\xe5\xc2\x36\xce\x9c\x21\xac\xff\x61\x42\x8b\xaa\x48\xe1\x48\xa2\x09\x3b\x63\xfd\x9b\xd1\xd7\xc0\xde\x72\x75\x3f\xfa\xc4\x10\x44\x52\x60\x69\xba\x8a\x16\xe3\x31\xaf\xd2\x27\x6e\xb3\x54\xf2\xfd\x21\x93\xac\x8f\xe4\x03\x74\xee\xd1\xf9\x9d\x1b\x9a\xbf\x3f\x69\xef\x65\xda\xff\xd0\xb1\xe9\x49\x06\xaf\x67\x7b\x63\x76\x3f\x59\xde\xcf\xf6\x90\xec\x64\xc6\x98\x1d\x56\x8b\x09\xb3\x19\x34\xdc\x72\x6c\x1e\xc8\x1f\xd6\x6d\x67\x69\x03\x95\xcf\x0d\x59\xef\xfa\x7b\x26\xf1\x18\xc2\x1e\x92\x42\x19\x17\x70\xf8\x9b\x06\xf5\x12\xfa\xf4\x29\x51\xf3\x4f\xc8\x59\xc4\x7c\x76\x5f\x06\xbe\xea\x21\x29\x4c\xc1\x51\xc8\x8a\x6a\x7c\x3c\x03\x47\xec\xff\x06\x00\x00\xff\xff\x1b\x13\x73\xe5\x31\x04\x00\x00")

func templateUtil_json_timeTplBytes() ([]byte, error) {
	return bindataRead(
		_templateUtil_json_timeTpl,
		"template/util_json_time.tpl",
	)
}

func templateUtil_json_timeTpl() (*asset, error) {
	bytes, err := templateUtil_json_timeTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/util_json_time.tpl", size: 1073, mode: os.FileMode(420), modTime: time.Unix(1510224345, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/app_conf.tpl": templateApp_confTpl,
	"template/condition.tpl": templateConditionTpl,
	"template/condition_base.tpl": templateCondition_baseTpl,
	"template/condition_ext.tpl": templateCondition_extTpl,
	"template/condition_types.tpl": templateCondition_typesTpl,
	"template/config.tpl": templateConfigTpl,
	"template/config_json.tpl": templateConfig_jsonTpl,
	"template/controller.tpl": templateControllerTpl,
	"template/controller_base.tpl": templateController_baseTpl,
	"template/controller_ext.tpl": templateController_extTpl,
	"template/dao.tpl": templateDaoTpl,
	"template/dao_base.tpl": templateDao_baseTpl,
	"template/dao_ext.tpl": templateDao_extTpl,
	"template/entity.tpl": templateEntityTpl,
	"template/entity_ext.tpl": templateEntity_extTpl,
	"template/glide.tpl": templateGlideTpl,
	"template/main.tpl": templateMainTpl,
	"template/readme.tpl": templateReadmeTpl,
	"template/router.tpl": templateRouterTpl,
	"template/service.tpl": templateServiceTpl,
	"template/service_base.tpl": templateService_baseTpl,
	"template/service_ext.tpl": templateService_extTpl,
	"template/util_convert_interface.tpl": templateUtil_convert_interfaceTpl,
	"template/util_json_time.tpl": templateUtil_json_timeTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"app_conf.tpl": &bintree{templateApp_confTpl, map[string]*bintree{}},
		"condition.tpl": &bintree{templateConditionTpl, map[string]*bintree{}},
		"condition_base.tpl": &bintree{templateCondition_baseTpl, map[string]*bintree{}},
		"condition_ext.tpl": &bintree{templateCondition_extTpl, map[string]*bintree{}},
		"condition_types.tpl": &bintree{templateCondition_typesTpl, map[string]*bintree{}},
		"config.tpl": &bintree{templateConfigTpl, map[string]*bintree{}},
		"config_json.tpl": &bintree{templateConfig_jsonTpl, map[string]*bintree{}},
		"controller.tpl": &bintree{templateControllerTpl, map[string]*bintree{}},
		"controller_base.tpl": &bintree{templateController_baseTpl, map[string]*bintree{}},
		"controller_ext.tpl": &bintree{templateController_extTpl, map[string]*bintree{}},
		"dao.tpl": &bintree{templateDaoTpl, map[string]*bintree{}},
		"dao_base.tpl": &bintree{templateDao_baseTpl, map[string]*bintree{}},
		"dao_ext.tpl": &bintree{templateDao_extTpl, map[string]*bintree{}},
		"entity.tpl": &bintree{templateEntityTpl, map[string]*bintree{}},
		"entity_ext.tpl": &bintree{templateEntity_extTpl, map[string]*bintree{}},
		"glide.tpl": &bintree{templateGlideTpl, map[string]*bintree{}},
		"main.tpl": &bintree{templateMainTpl, map[string]*bintree{}},
		"readme.tpl": &bintree{templateReadmeTpl, map[string]*bintree{}},
		"router.tpl": &bintree{templateRouterTpl, map[string]*bintree{}},
		"service.tpl": &bintree{templateServiceTpl, map[string]*bintree{}},
		"service_base.tpl": &bintree{templateService_baseTpl, map[string]*bintree{}},
		"service_ext.tpl": &bintree{templateService_extTpl, map[string]*bintree{}},
		"util_convert_interface.tpl": &bintree{templateUtil_convert_interfaceTpl, map[string]*bintree{}},
		"util_json_time.tpl": &bintree{templateUtil_json_timeTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

